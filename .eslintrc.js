/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true
    },
    "extends": [
        "airbnb-typescript",
        "airbnb/hooks",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": [
            "warn",
            {
                "default": "array"
            }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-types": [
            "warn",
            {
                "types": {
                    "Object": {
                        "message": "Avoid using the `Object` type. Did you mean `object`?"
                    },
                    "Function": {
                        "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                    },
                    "Boolean": {
                        "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                    },
                    "Number": {
                        "message": "Avoid using the `Number` type. Did you mean `number`?"
                    },
                    "String": {
                        "message": "Avoid using the `String` type. Did you mean `string`?"
                    },
                    "Symbol": {
                        "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                    }
                }
            }
        ],
        "@typescript-eslint/brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        "@typescript-eslint/class-name-casing": "warn",
        "@typescript-eslint/comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/dot-notation": "warn",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/func-call-spacing": [
            "error",
            "never"
        ],
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/keyword-spacing": [
            "error",
            {
                "before": true,
                "after": true,
                "overrides": {
                    "return": {
                        "after": true
                    },
                    "throw": {
                        "after": true
                    },
                    "case": {
                        "after": true
                    }
                }
            }
        ],
        "@typescript-eslint/lines-between-class-members": [
            "error",
            "always",
            {
                "exceptAfterSingleLine": false
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "off",
            {
                "multiline": {
                    "delimiter": "none",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "variable",
                "format": [
                    "camelCase",
                    "PascalCase",
                    "UPPER_CASE"
                ]
            },
            {
                "selector": "function",
                "format": [
                    "camelCase",
                    "PascalCase"
                ]
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            }
        ],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-parens": [
            "off",
            "all",
            {
                "conditionalAssign": true,
                "nestedBinaryExpressions": false,
                "returnAssign": false,
                "ignoreJSX": "all",
                "enforceForArrowConditionals": false
            }
        ],
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-magic-numbers": [
            "off",
            {
                "ignore": [],
                "ignoreArrayIndexes": true,
                "enforceConst": true,
                "detectObjects": false
            }
        ],
        "@typescript-eslint/no-misused-new": "warn",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "args": "after-used",
                "ignoreRestSiblings": true
            }
        ],
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "warn",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/semi": [
            "off",
            null
        ],
        "@typescript-eslint/space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "@typescript-eslint/triple-slash-reference": [
            "warn",
            {
                "path": "always",
                "types": "prefer-import",
                "lib": "always"
            }
        ],
        "@typescript-eslint/type-annotation-spacing": "off",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "warn",
        "accessor-pairs": "off",
        "array-bracket-newline": [
            "off",
            "consistent"
        ],
        "array-bracket-spacing": [
            "error",
            "never"
        ],
        "array-callback-return": [
            "error",
            {
                "allowImplicit": true,
                "checkForEach": false
            }
        ],
        "array-element-newline": [
            "off",
            {
                "multiline": true,
                "minItems": 3
            }
        ],
        "arrow-body-style": [
            "error",
            "as-needed",
            {
                "requireReturnForObjectLiteral": false
            }
        ],
        "arrow-parens": [
            "off",
            "always"
        ],
        "arrow-spacing": [
            "error",
            {
                "before": true,
                "after": true
            }
        ],
        "block-scoped-var": "error",
        "block-spacing": [
            "error",
            "always"
        ],
        "brace-style": [
            "off",
            "off"
        ],
        "callback-return": "off",
        "camelcase": "warn",
        "capitalized-comments": [
            "off",
            "never",
            {
                "line": {
                    "ignorePattern": ".*",
                    "ignoreInlineComments": true,
                    "ignoreConsecutiveComments": true
                },
                "block": {
                    "ignorePattern": ".*",
                    "ignoreInlineComments": true,
                    "ignoreConsecutiveComments": true
                }
            }
        ],
        "class-methods-use-this": [
            "error",
            {
                "exceptMethods": [
                    "render",
                    "getInitialState",
                    "getDefaultProps",
                    "getChildContext",
                    "componentWillMount",
                    "UNSAFE_componentWillMount",
                    "componentDidMount",
                    "componentWillReceiveProps",
                    "UNSAFE_componentWillReceiveProps",
                    "shouldComponentUpdate",
                    "componentWillUpdate",
                    "UNSAFE_componentWillUpdate",
                    "componentDidUpdate",
                    "componentWillUnmount",
                    "componentDidCatch",
                    "getSnapshotBeforeUpdate"
                ]
            }
        ],
        "comma-dangle": "off",
        "comma-spacing": [
            "off",
            {
                "before": false,
                "after": true
            }
        ],
        "comma-style": [
            "error",
            "last",
            {
                "exceptions": {
                    "ArrayExpression": false,
                    "ArrayPattern": false,
                    "ArrowFunctionExpression": false,
                    "CallExpression": false,
                    "FunctionDeclaration": false,
                    "FunctionExpression": false,
                    "ImportDeclaration": false,
                    "ObjectExpression": false,
                    "ObjectPattern": false,
                    "VariableDeclaration": false,
                    "NewExpression": false
                }
            }
        ],
        "complexity": "off",
        "computed-property-spacing": [
            "error",
            "never"
        ],
        "consistent-return": "error",
        "consistent-this": "off",
        "constructor-super": "warn",
        "curly": [
            "error",
            "multi-line"
        ],
        "default-case": [
            "error",
            {
                "commentPattern": "^no default$"
            }
        ],
        "default-case-last": "off",
        "default-param-last": "off",
        "dot-location": [
            "error",
            "property"
        ],
        "dot-notation": [
            "off",
            {
                "allowKeywords": true,
                "allowPattern": "",
                "allowPrivateClassPropertyAccess": false
            }
        ],
        "eol-last": "off",
        "eqeqeq": [
            "warn",
            "smart"
        ],
        "for-direction": "error",
        "func-call-spacing": [
            "off",
            "never"
        ],
        "func-name-matching": [
            "off",
            "always",
            {
                "includeCommonJSModuleExports": false,
                "considerPropertyDescriptor": true
            }
        ],
        "func-names": "warn",
        "func-style": [
            "off",
            "expression"
        ],
        "function-call-argument-newline": [
            "off",
            "consistent"
        ],
        "function-paren-newline": [
            "error",
            "consistent"
        ],
        "generator-star-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "getter-return": [
            "error",
            {
                "allowImplicit": true
            }
        ],
        "global-require": "error",
        "grouped-accessor-pairs": "off",
        "guard-for-in": "warn",
        "handle-callback-err": "off",
        "id-blacklist": [
            "warn",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-length": "off",
        "id-match": "warn",
        "implicit-arrow-linebreak": [
            "error",
            "beside"
        ],
        "import/default": "off",
        "import/dynamic-import-chunkname": [
            "off",
            {
                "importFunctions": [],
                "webpackChunknameFormat": "[0-9a-zA-Z-_/.]+"
            }
        ],
        "import/export": "error",
        "import/exports-last": "off",
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "mjs": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],
        "import/first": "error",
        "import/group-exports": "off",
        "import/imports-first": "off",
        "import/max-dependencies": [
            "off",
            {
                "max": 10
            }
        ],
        "import/named": "error",
        "import/namespace": "off",
        "import/newline-after-import": "error",
        "import/no-absolute-path": "error",
        "import/no-amd": "error",
        "import/no-anonymous-default-export": [
            "off",
            {
                "allowArray": false,
                "allowArrowFunction": false,
                "allowAnonymousClass": false,
                "allowAnonymousFunction": false,
                "allowLiteral": false,
                "allowObject": false
            }
        ],
        "import/no-commonjs": "off",
        "import/no-cycle": [
            "error",
            {
                "maxDepth": null,
                "ignoreExternal": false
            }
        ],
        "import/no-default-export": "off",
        "import/no-deprecated": "off",
        "import/no-duplicates": "error",
        "import/no-dynamic-require": "error",
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": [
                    "test/**",
                    "tests/**",
                    "spec/**",
                    "**/__tests__/**",
                    "**/__mocks__/**",
                    "test.{js,jsx,ts,tsx}",
                    "test-*.{js,jsx,ts,tsx}",
                    "**/*{.,_}{test,spec}.{js,jsx,ts,tsx}",
                    "**/jest.config.js",
                    "**/jest.setup.js",
                    "**/vue.config.js",
                    "**/webpack.config.js",
                    "**/webpack.config.*.js",
                    "**/rollup.config.js",
                    "**/rollup.config.*.js",
                    "**/gulpfile.js",
                    "**/gulpfile.*.js",
                    "**/Gruntfile{,.js}",
                    "**/protractor.conf.js",
                    "**/protractor.conf.*.js",
                    "**/karma.conf.js"
                ],
                "optionalDependencies": false
            }
        ],
        "import/no-internal-modules": [
            "off",
            {
                "allow": []
            }
        ],
        "import/no-mutable-exports": "error",
        "import/no-named-as-default": "error",
        "import/no-named-as-default-member": "error",
        "import/no-named-default": "error",
        "import/no-named-export": "off",
        "import/no-namespace": "off",
        "import/no-nodejs-modules": "off",
        "import/no-relative-parent-imports": "off",
        "import/no-restricted-paths": "off",
        "import/no-self-import": "error",
        "import/no-unassigned-import": "off",
        "import/no-unresolved": [
            "error",
            {
                "commonjs": true,
                "caseSensitive": true
            }
        ],
        "import/no-unused-modules": [
            "off",
            {
                "ignoreExports": [],
                "missingExports": true,
                "unusedExports": true
            }
        ],
        "import/no-useless-path-segments": [
            "error",
            {
                "commonjs": true
            }
        ],
        "import/no-webpack-loader-syntax": "error",
        "import/order": [
            "error",
            {
                "groups": [
                    [
                        "builtin",
                        "external",
                        "internal"
                    ]
                ]
            }
        ],
        "import/prefer-default-export": "error",
        "import/unambiguous": "off",
        "indent": [
            "off",
            2,
            {
                "SwitchCase": 1,
                "VariableDeclarator": 1,
                "outerIIFEBody": 1,
                "FunctionDeclaration": {
                    "parameters": 1,
                    "body": 1
                },
                "FunctionExpression": {
                    "parameters": 1,
                    "body": 1
                },
                "CallExpression": {
                    "arguments": 1
                },
                "ArrayExpression": 1,
                "ObjectExpression": 1,
                "ImportDeclaration": 1,
                "flatTernaryExpressions": false,
                "ignoredNodes": [
                    "JSXElement",
                    "JSXElement > *",
                    "JSXAttribute",
                    "JSXIdentifier",
                    "JSXNamespacedName",
                    "JSXMemberExpression",
                    "JSXSpreadAttribute",
                    "JSXExpressionContainer",
                    "JSXOpeningElement",
                    "JSXClosingElement",
                    "JSXFragment",
                    "JSXOpeningFragment",
                    "JSXClosingFragment",
                    "JSXText",
                    "JSXEmptyExpression",
                    "JSXSpreadChild"
                ],
                "ignoreComments": false,
                "offsetTernaryExpressions": false
            }
        ],
        "init-declarations": "off",
        "jsdoc/check-alignment": "warn",
        "jsdoc/check-indentation": "warn",
        "jsdoc/newline-after-description": "warn",
        "jsx-a11y/accessible-emoji": "error",
        "jsx-a11y/alt-text": [
            "error",
            {
                "elements": [
                    "img",
                    "object",
                    "area",
                    "input[type=\"image\"]"
                ],
                "img": [],
                "object": [],
                "area": [],
                "input[type=\"image\"]": []
            }
        ],
        "jsx-a11y/anchor-has-content": [
            "error",
            {
                "components": []
            }
        ],
        "jsx-a11y/anchor-is-valid": [
            "error",
            {
                "components": [
                    "Link"
                ],
                "specialLink": [
                    "to"
                ],
                "aspects": [
                    "noHref",
                    "invalidHref",
                    "preferButton"
                ]
            }
        ],
        "jsx-a11y/aria-activedescendant-has-tabindex": "error",
        "jsx-a11y/aria-props": "error",
        "jsx-a11y/aria-proptypes": "error",
        "jsx-a11y/aria-role": [
            "error",
            {
                "ignoreNonDom": false,
                "ignoreNonDOM": false
            }
        ],
        "jsx-a11y/aria-unsupported-elements": "error",
        "jsx-a11y/autocomplete-valid": [
            "off",
            {
                "inputComponents": []
            }
        ],
        "jsx-a11y/click-events-have-key-events": "error",
        "jsx-a11y/control-has-associated-label": [
            "error",
            {
                "labelAttributes": [
                    "label"
                ],
                "controlComponents": [],
                "ignoreElements": [
                    "audio",
                    "canvas",
                    "embed",
                    "input",
                    "textarea",
                    "tr",
                    "video"
                ],
                "ignoreRoles": [
                    "grid",
                    "listbox",
                    "menu",
                    "menubar",
                    "radiogroup",
                    "row",
                    "tablist",
                    "toolbar",
                    "tree",
                    "treegrid"
                ],
                "depth": 5
            }
        ],
        "jsx-a11y/heading-has-content": [
            "error",
            {
                "components": [
                    ""
                ]
            }
        ],
        "jsx-a11y/html-has-lang": "error",
        "jsx-a11y/iframe-has-title": "error",
        "jsx-a11y/img-redundant-alt": "error",
        "jsx-a11y/interactive-supports-focus": "error",
        "jsx-a11y/label-has-associated-control": [
            "error",
            {
                "labelComponents": [],
                "labelAttributes": [],
                "controlComponents": [],
                "assert": "both",
                "depth": 25
            }
        ],
        "jsx-a11y/label-has-for": [
            "off",
            {
                "components": [],
                "required": {
                    "every": [
                        "nesting",
                        "id"
                    ]
                },
                "allowChildren": false
            }
        ],
        "jsx-a11y/lang": "error",
        "jsx-a11y/media-has-caption": [
            "error",
            {
                "audio": [],
                "video": [],
                "track": []
            }
        ],
        "jsx-a11y/mouse-events-have-key-events": "error",
        "jsx-a11y/no-access-key": "error",
        "jsx-a11y/no-autofocus": [
            "error",
            {
                "ignoreNonDOM": true
            }
        ],
        "jsx-a11y/no-distracting-elements": [
            "error",
            {
                "elements": [
                    "marquee",
                    "blink"
                ]
            }
        ],
        "jsx-a11y/no-interactive-element-to-noninteractive-role": [
            "error",
            {
                "tr": [
                    "none",
                    "presentation"
                ]
            }
        ],
        "jsx-a11y/no-noninteractive-element-interactions": [
            "error",
            {
                "handlers": [
                    "onClick",
                    "onMouseDown",
                    "onMouseUp",
                    "onKeyPress",
                    "onKeyDown",
                    "onKeyUp"
                ]
            }
        ],
        "jsx-a11y/no-noninteractive-element-to-interactive-role": [
            "error",
            {
                "ul": [
                    "listbox",
                    "menu",
                    "menubar",
                    "radiogroup",
                    "tablist",
                    "tree",
                    "treegrid"
                ],
                "ol": [
                    "listbox",
                    "menu",
                    "menubar",
                    "radiogroup",
                    "tablist",
                    "tree",
                    "treegrid"
                ],
                "li": [
                    "menuitem",
                    "option",
                    "row",
                    "tab",
                    "treeitem"
                ],
                "table": [
                    "grid"
                ],
                "td": [
                    "gridcell"
                ]
            }
        ],
        "jsx-a11y/no-noninteractive-tabindex": [
            "error",
            {
                "tags": [],
                "roles": [
                    "tabpanel"
                ]
            }
        ],
        "jsx-a11y/no-onchange": "off",
        "jsx-a11y/no-redundant-roles": "error",
        "jsx-a11y/no-static-element-interactions": [
            "error",
            {
                "handlers": [
                    "onClick",
                    "onMouseDown",
                    "onMouseUp",
                    "onKeyPress",
                    "onKeyDown",
                    "onKeyUp"
                ]
            }
        ],
        "jsx-a11y/role-has-required-aria-props": "error",
        "jsx-a11y/role-supports-aria-props": "error",
        "jsx-a11y/scope": "error",
        "jsx-a11y/tabindex-no-positive": "error",
        "jsx-quotes": [
            "error",
            "prefer-double"
        ],
        "key-spacing": [
            "error",
            {
                "beforeColon": false,
                "afterColon": true
            }
        ],
        "keyword-spacing": [
            "off",
            {
                "before": true,
                "after": true,
                "overrides": {
                    "return": {
                        "after": true
                    },
                    "throw": {
                        "after": true
                    },
                    "case": {
                        "after": true
                    }
                }
            }
        ],
        "line-comment-position": [
            "off",
            {
                "position": "above",
                "ignorePattern": "",
                "applyDefaultPatterns": true
            }
        ],
        "linebreak-style": "off",
        "lines-around-comment": "off",
        "lines-around-directive": [
            "error",
            {
                "before": "always",
                "after": "always"
            }
        ],
        "lines-between-class-members": [
            "off",
            "always",
            {
                "exceptAfterSingleLine": false
            }
        ],
        "max-classes-per-file": [
            "warn",
            1
        ],
        "max-depth": [
            "off",
            4
        ],
        "max-len": "off",
        "max-lines": [
            "off",
            {
                "max": 300,
                "skipBlankLines": true,
                "skipComments": true
            }
        ],
        "max-lines-per-function": [
            "off",
            {
                "max": 50,
                "skipBlankLines": true,
                "skipComments": true,
                "IIFEs": true
            }
        ],
        "max-nested-callbacks": "off",
        "max-params": [
            "off",
            3
        ],
        "max-statements": [
            "off",
            10
        ],
        "max-statements-per-line": [
            "off",
            {
                "max": 1
            }
        ],
        "multiline-comment-style": [
            "off",
            "starred-block"
        ],
        "multiline-ternary": [
            "off",
            "never"
        ],
        "new-cap": [
            "error",
            {
                "newIsCap": true,
                "newIsCapExceptions": [],
                "capIsNew": false,
                "capIsNewExceptions": [
                    "Immutable.Map",
                    "Immutable.Set",
                    "Immutable.List"
                ],
                "properties": true
            }
        ],
        "new-parens": "off",
        "newline-after-var": "off",
        "newline-before-return": "off",
        "newline-per-chained-call": "off",
        "no-alert": "warn",
        "no-array-constructor": "off",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "error",
        "no-bitwise": "warn",
        "no-buffer-constructor": "error",
        "no-caller": "warn",
        "no-case-declarations": "error",
        "no-catch-shadow": "off",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "warn",
        "no-confusing-arrow": [
            "error",
            {
                "allowParens": true
            }
        ],
        "no-console": "warn",
        "no-const-assign": "error",
        "no-constant-condition": "warn",
        "no-constructor-return": "off",
        "no-continue": "error",
        "no-control-regex": "error",
        "no-debugger": "warn",
        "no-delete-var": "error",
        "no-div-regex": "off",
        "no-dupe-args": "error",
        "no-dupe-class-members": "off",
        "no-dupe-else-if": "off",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "off",
        "no-else-return": [
            "error",
            {
                "allowElseIf": false
            }
        ],
        "no-empty": "warn",
        "no-empty-character-class": "error",
        "no-empty-function": [
            "off",
            {
                "allow": [
                    "arrowFunctions",
                    "functions",
                    "methods"
                ]
            }
        ],
        "no-empty-pattern": "error",
        "no-eq-null": "off",
        "no-eval": "warn",
        "no-ex-assign": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-extra-parens": [
            "off",
            "all",
            {
                "conditionalAssign": true,
                "nestedBinaryExpressions": false,
                "returnAssign": false,
                "ignoreJSX": "all",
                "enforceForArrowConditionals": false
            }
        ],
        "no-extra-semi": "off",
        "no-fallthrough": "off",
        "no-floating-decimal": "error",
        "no-func-assign": "error",
        "no-global-assign": [
            "error",
            {
                "exceptions": []
            }
        ],
        "no-implicit-coercion": [
            "off",
            {
                "boolean": false,
                "number": true,
                "string": true,
                "allow": []
            }
        ],
        "no-implicit-globals": "off",
        "no-implied-eval": "off",
        "no-import-assign": "off",
        "no-inline-comments": "off",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-invalid-this": "off",
        "no-irregular-whitespace": "off",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": [
            "error",
            {
                "allowLoop": false,
                "allowSwitch": false
            }
        ],
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-loss-of-precision": "off",
        "no-magic-numbers": [
            "off",
            {
                "ignore": [],
                "ignoreArrayIndexes": true,
                "enforceConst": true,
                "detectObjects": false
            }
        ],
        "no-misleading-character-class": "error",
        "no-mixed-operators": [
            "error",
            {
                "groups": [
                    [
                        "%",
                        "**"
                    ],
                    [
                        "%",
                        "+"
                    ],
                    [
                        "%",
                        "-"
                    ],
                    [
                        "%",
                        "*"
                    ],
                    [
                        "%",
                        "/"
                    ],
                    [
                        "/",
                        "*"
                    ],
                    [
                        "&",
                        "|",
                        "<<",
                        ">>",
                        ">>>"
                    ],
                    [
                        "==",
                        "!=",
                        "===",
                        "!=="
                    ],
                    [
                        "&&",
                        "||"
                    ]
                ],
                "allowSamePrecedence": false
            }
        ],
        "no-mixed-requires": [
            "off",
            false
        ],
        "no-mixed-spaces-and-tabs": "error",
        "no-multi-assign": "error",
        "no-multi-spaces": [
            "error",
            {
                "ignoreEOLComments": false
            }
        ],
        "no-multi-str": "error",
        "no-multiple-empty-lines": "off",
        "no-native-reassign": "off",
        "no-negated-condition": "off",
        "no-negated-in-lhs": "off",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-require": "error",
        "no-new-symbol": "error",
        "no-new-wrappers": "warn",
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": [
            "error",
            {
                "props": true,
                "ignorePropertyModificationsFor": [
                    "acc",
                    "accumulator",
                    "e",
                    "ctx",
                    "context",
                    "req",
                    "request",
                    "res",
                    "response",
                    "$scope",
                    "staticContext"
                ]
            }
        ],
        "no-path-concat": "error",
        "no-plusplus": "error",
        "no-process-env": "off",
        "no-process-exit": "off",
        "no-proto": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-restricted-exports": [
            "off",
            {
                "restrictedNamedExports": [
                    "default",
                    "then"
                ]
            }
        ],
        "no-restricted-globals": [
            "error",
            "isFinite",
            "isNaN",
            "addEventListener",
            "blur",
            "close",
            "closed",
            "confirm",
            "defaultStatus",
            "defaultstatus",
            "event",
            "external",
            "find",
            "focus",
            "frameElement",
            "frames",
            "history",
            "innerHeight",
            "innerWidth",
            "length",
            "location",
            "locationbar",
            "menubar",
            "moveBy",
            "moveTo",
            "name",
            "onblur",
            "onerror",
            "onfocus",
            "onload",
            "onresize",
            "onunload",
            "open",
            "opener",
            "opera",
            "outerHeight",
            "outerWidth",
            "pageXOffset",
            "pageYOffset",
            "parent",
            "print",
            "removeEventListener",
            "resizeBy",
            "resizeTo",
            "screen",
            "screenLeft",
            "screenTop",
            "screenX",
            "screenY",
            "scroll",
            "scrollbars",
            "scrollBy",
            "scrollTo",
            "scrollX",
            "scrollY",
            "self",
            "status",
            "statusbar",
            "stop",
            "toolbar",
            "top"
        ],
        "no-restricted-imports": [
            "off",
            {
                "paths": [],
                "patterns": []
            }
        ],
        "no-restricted-modules": "off",
        "no-restricted-properties": [
            "error",
            {
                "object": "arguments",
                "property": "callee",
                "message": "arguments.callee is deprecated"
            },
            {
                "object": "global",
                "property": "isFinite",
                "message": "Please use Number.isFinite instead"
            },
            {
                "object": "self",
                "property": "isFinite",
                "message": "Please use Number.isFinite instead"
            },
            {
                "object": "window",
                "property": "isFinite",
                "message": "Please use Number.isFinite instead"
            },
            {
                "object": "global",
                "property": "isNaN",
                "message": "Please use Number.isNaN instead"
            },
            {
                "object": "self",
                "property": "isNaN",
                "message": "Please use Number.isNaN instead"
            },
            {
                "object": "window",
                "property": "isNaN",
                "message": "Please use Number.isNaN instead"
            },
            {
                "property": "__defineGetter__",
                "message": "Please use Object.defineProperty instead."
            },
            {
                "property": "__defineSetter__",
                "message": "Please use Object.defineProperty instead."
            },
            {
                "object": "Math",
                "property": "pow",
                "message": "Use the exponentiation operator (**) instead."
            }
        ],
        "no-restricted-syntax": [
            "error",
            {
                "selector": "ForInStatement",
                "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
            },
            {
                "selector": "ForOfStatement",
                "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
            },
            {
                "selector": "LabeledStatement",
                "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
            },
            {
                "selector": "WithStatement",
                "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
            }
        ],
        "no-return-assign": [
            "error",
            "always"
        ],
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-assign": [
            "error",
            {
                "props": true
            }
        ],
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-setter-return": "off",
        "no-shadow": [
            "warn",
            {
                "hoist": "all"
            }
        ],
        "no-shadow-restricted-names": "error",
        "no-spaced-func": "error",
        "no-sparse-arrays": "error",
        "no-sync": "off",
        "no-tabs": "error",
        "no-template-curly-in-string": "error",
        "no-ternary": "off",
        "no-this-before-super": "error",
        "no-throw-literal": "warn",
        "no-trailing-spaces": "off",
        "no-undef": "error",
        "no-undef-init": "warn",
        "no-undefined": "off",
        "no-underscore-dangle": "warn",
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "off",
        "no-unneeded-ternary": [
            "error",
            {
                "defaultAssignment": false
            }
        ],
        "no-unreachable": "error",
        "no-unsafe-finally": "warn",
        "no-unsafe-negation": "error",
        "no-unused-expressions": [
            "off",
            {
                "allowShortCircuit": false,
                "allowTernary": false,
                "allowTaggedTemplates": false
            }
        ],
        "no-unused-labels": "warn",
        "no-unused-vars": [
            "off",
            {
                "vars": "all",
                "args": "after-used",
                "ignoreRestSiblings": true
            }
        ],
        "no-use-before-define": [
            "off",
            {
                "functions": true,
                "classes": true,
                "variables": true
            }
        ],
        "no-useless-backreference": "off",
        "no-useless-call": "off",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "off",
        "no-useless-escape": "error",
        "no-useless-rename": [
            "error",
            {
                "ignoreDestructuring": false,
                "ignoreImport": false,
                "ignoreExport": false
            }
        ],
        "no-useless-return": "error",
        "no-var": "warn",
        "no-void": "error",
        "no-warning-comments": [
            "off",
            {
                "terms": [
                    "todo",
                    "fixme",
                    "xxx"
                ],
                "location": "start"
            }
        ],
        "no-whitespace-before-property": "error",
        "no-with": "error",
        "nonblock-statement-body-position": [
            "error",
            "beside",
            {
                "overrides": {}
            }
        ],
        "object-curly-newline": [
            "error",
            {
                "ObjectExpression": {
                    "minProperties": 4,
                    "multiline": true,
                    "consistent": true
                },
                "ObjectPattern": {
                    "minProperties": 4,
                    "multiline": true,
                    "consistent": true
                },
                "ImportDeclaration": {
                    "minProperties": 4,
                    "multiline": true,
                    "consistent": true
                },
                "ExportDeclaration": {
                    "minProperties": 4,
                    "multiline": true,
                    "consistent": true
                }
            }
        ],
        "object-curly-spacing": [
            "error",
            "always"
        ],
        "object-property-newline": [
            "error",
            {
                "allowAllPropertiesOnSameLine": true,
                "allowMultiplePropertiesPerLine": false
            }
        ],
        "object-shorthand": "warn",
        "one-var": [
            "warn",
            "never"
        ],
        "one-var-declaration-per-line": [
            "error",
            "always"
        ],
        "operator-assignment": [
            "error",
            "always"
        ],
        "operator-linebreak": [
            "error",
            "before",
            {
                "overrides": {
                    "=": "none"
                }
            }
        ],
        "padded-blocks": [
            "error",
            {
                "blocks": "never",
                "classes": "never",
                "switches": "never"
            },
            {
                "allowSingleLineBlocks": true
            }
        ],
        "padding-line-between-statements": "off",
        "prefer-arrow-callback": [
            "error",
            {
                "allowNamedFunctions": false,
                "allowUnboundThis": true
            }
        ],
        "prefer-arrow/prefer-arrow-functions": "warn",
        "prefer-const": "warn",
        "prefer-destructuring": [
            "error",
            {
                "VariableDeclarator": {
                    "array": false,
                    "object": true
                },
                "AssignmentExpression": {
                    "array": true,
                    "object": false
                }
            },
            {
                "enforceForRenamedProperties": false
            }
        ],
        "prefer-exponentiation-operator": "off",
        "prefer-named-capture-group": "off",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": [
            "error",
            {
                "allowEmptyReject": true
            }
        ],
        "prefer-reflect": "off",
        "prefer-regex-literals": "off",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props": "off",
        "quotes": [
            "off",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "radix": "warn",
        "react-hooks/exhaustive-deps": "error",
        "react-hooks/rules-of-hooks": "error",
        "react/boolean-prop-naming": [
            "off",
            {
                "propTypeNames": [
                    "bool",
                    "mutuallyExclusiveTrueProps"
                ],
                "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+",
                "message": ""
            }
        ],
        "react/button-has-type": [
            "error",
            {
                "button": true,
                "submit": true,
                "reset": false
            }
        ],
        "react/default-props-match-prop-types": [
            "error",
            {
                "allowRequiredDefaults": false
            }
        ],
        "react/destructuring-assignment": [
            "error",
            "always"
        ],
        "react/display-name": [
            "off",
            {
                "ignoreTranspilerName": false
            }
        ],
        "react/forbid-component-props": [
            "off",
            {
                "forbid": []
            }
        ],
        "react/forbid-dom-props": [
            "off",
            {
                "forbid": []
            }
        ],
        "react/forbid-elements": [
            "off",
            {
                "forbid": []
            }
        ],
        "react/forbid-foreign-prop-types": [
            "warn",
            {
                "allowInPropTypes": true
            }
        ],
        "react/forbid-prop-types": [
            "error",
            {
                "forbid": [
                    "any",
                    "array",
                    "object"
                ],
                "checkContextTypes": true,
                "checkChildContextTypes": true
            }
        ],
        "react/function-component-definition": [
            "off",
            {
                "namedComponents": "function-expression",
                "unnamedComponents": "function-expression"
            }
        ],
        "react/jsx-boolean-value": [
            "error",
            "never",
            {
                "always": []
            }
        ],
        "react/jsx-child-element-spacing": "off",
        "react/jsx-closing-bracket-location": [
            "error",
            "line-aligned"
        ],
        "react/jsx-closing-tag-location": "error",
        "react/jsx-curly-brace-presence": [
            "error",
            {
                "props": "never",
                "children": "never"
            }
        ],
        "react/jsx-curly-newline": [
            "error",
            {
                "multiline": "consistent",
                "singleline": "consistent"
            }
        ],
        "react/jsx-curly-spacing": [
            "error",
            "never",
            {
                "allowMultiline": true
            }
        ],
        "react/jsx-equals-spacing": [
            "error",
            "never"
        ],
        "react/jsx-filename-extension": [
            "error",
            {
                "extensions": [
                    ".jsx",
                    ".tsx"
                ]
            }
        ],
        "react/jsx-first-prop-new-line": [
            "error",
            "multiline-multiprop"
        ],
        "react/jsx-fragments": [
            "error",
            "syntax"
        ],
        "react/jsx-handler-names": [
            "off",
            {
                "eventHandlerPrefix": "handle",
                "eventHandlerPropPrefix": "on"
            }
        ],
        "react/jsx-indent": [
            "error",
            2
        ],
        "react/jsx-indent-props": [
            "error",
            2
        ],
        "react/jsx-key": "off",
        "react/jsx-max-depth": "off",
        "react/jsx-max-props-per-line": [
            "error",
            {
                "maximum": 1,
                "when": "multiline"
            }
        ],
        "react/jsx-no-bind": [
            "error",
            {
                "ignoreRefs": true,
                "allowArrowFunctions": true,
                "allowFunctions": false,
                "allowBind": false,
                "ignoreDOMComponents": true
            }
        ],
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-duplicate-props": [
            "error",
            {
                "ignoreCase": true
            }
        ],
        "react/jsx-no-literals": [
            "off",
            {
                "noStrings": true
            }
        ],
        "react/jsx-no-script-url": [
            "off",
            [
                {
                    "name": "Link",
                    "props": [
                        "to"
                    ]
                }
            ]
        ],
        "react/jsx-no-target-blank": [
            "error",
            {
                "enforceDynamicLinks": "always"
            }
        ],
        "react/jsx-no-undef": "error",
        "react/jsx-no-useless-fragment": "off",
        "react/jsx-one-expression-per-line": [
            "error",
            {
                "allow": "single-child"
            }
        ],
        "react/jsx-pascal-case": [
            "error",
            {
                "allowAllCaps": true,
                "ignore": []
            }
        ],
        "react/jsx-props-no-multi-spaces": "error",
        "react/jsx-props-no-spreading": [
            "error",
            {
                "html": "enforce",
                "custom": "enforce",
                "explicitSpread": "ignore",
                "exceptions": []
            }
        ],
        "react/jsx-sort-default-props": [
            "off",
            {
                "ignoreCase": true
            }
        ],
        "react/jsx-sort-prop-types": "off",
        "react/jsx-sort-props": [
            "off",
            {
                "ignoreCase": true,
                "callbacksLast": false,
                "shorthandFirst": false,
                "shorthandLast": false,
                "noSortAlphabetically": false,
                "reservedFirst": true
            }
        ],
        "react/jsx-space-before-closing": [
            "off",
            "always"
        ],
        "react/jsx-tag-spacing": [
            "error",
            {
                "closingSlash": "never",
                "beforeSelfClosing": "always",
                "afterOpening": "never",
                "beforeClosing": "never"
            }
        ],
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/jsx-wrap-multilines": [
            "error",
            {
                "declaration": "parens-new-line",
                "assignment": "parens-new-line",
                "return": "parens-new-line",
                "arrow": "parens-new-line",
                "condition": "parens-new-line",
                "logical": "parens-new-line",
                "prop": "parens-new-line"
            }
        ],
        "react/no-access-state-in-setstate": "error",
        "react/no-adjacent-inline-elements": "off",
        "react/no-array-index-key": "error",
        "react/no-children-prop": "error",
        "react/no-danger": "warn",
        "react/no-danger-with-children": "error",
        "react/no-deprecated": "error",
        "react/no-did-mount-set-state": "off",
        "react/no-did-update-set-state": "error",
        "react/no-direct-mutation-state": "off",
        "react/no-find-dom-node": "error",
        "react/no-is-mounted": "error",
        "react/no-multi-comp": "off",
        "react/no-redundant-should-component-update": "error",
        "react/no-render-return-value": "error",
        "react/no-set-state": "off",
        "react/no-string-refs": "error",
        "react/no-this-in-sfc": "error",
        "react/no-typos": "error",
        "react/no-unescaped-entities": "error",
        "react/no-unknown-property": "error",
        "react/no-unsafe": "off",
        "react/no-unused-prop-types": [
            "error",
            {
                "customValidators": [],
                "skipShapeProps": true
            }
        ],
        "react/no-unused-state": "error",
        "react/no-will-update-set-state": "error",
        "react/prefer-es6-class": [
            "error",
            "always"
        ],
        "react/prefer-read-only-props": "off",
        "react/prefer-stateless-function": [
            "error",
            {
                "ignorePureComponents": true
            }
        ],
        "react/prop-types": [
            "error",
            {
                "ignore": [],
                "customValidators": [],
                "skipUndeclared": false
            }
        ],
        "react/react-in-jsx-scope": "error",
        "react/require-default-props": [
            "error",
            {
                "forbidDefaultForRequired": true
            }
        ],
        "react/require-optimization": [
            "off",
            {
                "allowDecorators": []
            }
        ],
        "react/require-render-return": "error",
        "react/self-closing-comp": "error",
        "react/sort-comp": [
            "error",
            {
                "order": [
                    "static-variables",
                    "static-methods",
                    "instance-variables",
                    "lifecycle",
                    "/^on.+$/",
                    "getters",
                    "setters",
                    "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
                    "instance-methods",
                    "everything-else",
                    "rendering"
                ],
                "groups": {
                    "lifecycle": [
                        "displayName",
                        "propTypes",
                        "contextTypes",
                        "childContextTypes",
                        "mixins",
                        "statics",
                        "defaultProps",
                        "constructor",
                        "getDefaultProps",
                        "getInitialState",
                        "state",
                        "getChildContext",
                        "getDerivedStateFromProps",
                        "componentWillMount",
                        "UNSAFE_componentWillMount",
                        "componentDidMount",
                        "componentWillReceiveProps",
                        "UNSAFE_componentWillReceiveProps",
                        "shouldComponentUpdate",
                        "componentWillUpdate",
                        "UNSAFE_componentWillUpdate",
                        "getSnapshotBeforeUpdate",
                        "componentDidUpdate",
                        "componentDidCatch",
                        "componentWillUnmount"
                    ],
                    "rendering": [
                        "/^render.+$/",
                        "render"
                    ]
                }
            }
        ],
        "react/sort-prop-types": [
            "off",
            {
                "ignoreCase": true,
                "callbacksLast": false,
                "requiredFirst": false,
                "sortShapeProp": true
            }
        ],
        "react/state-in-constructor": [
            "error",
            "always"
        ],
        "react/static-property-placement": [
            "error",
            "property assignment"
        ],
        "react/style-prop-object": "error",
        "react/void-dom-elements-no-children": "error",
        "require-atomic-updates": "off",
        "require-await": "off",
        "require-jsdoc": "off",
        "require-unicode-regexp": "off",
        "require-yield": "error",
        "rest-spread-spacing": [
            "error",
            "never"
        ],
        "semi": [
            "off",
            "always"
        ],
        "semi-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "semi-style": [
            "error",
            "last"
        ],
        "sort-imports": [
            "off",
            {
                "ignoreCase": false,
                "ignoreDeclarationSort": false,
                "ignoreMemberSort": false,
                "memberSyntaxSortOrder": [
                    "none",
                    "all",
                    "multiple",
                    "single"
                ]
            }
        ],
        "sort-keys": [
            "off",
            "asc",
            {
                "caseSensitive": false,
                "natural": true
            }
        ],
        "sort-vars": "off",
        "space-before-blocks": "error",
        "space-before-function-paren": "off",
        "space-in-parens": [
            "off",
            "never"
        ],
        "space-infix-ops": "error",
        "space-unary-ops": [
            "error",
            {
                "words": true,
                "nonwords": false,
                "overrides": {}
            }
        ],
        "spaced-comment": [
            "warn",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "strict": [
            "error",
            "never"
        ],
        "switch-colon-spacing": [
            "error",
            {
                "after": true,
                "before": false
            }
        ],
        "symbol-description": "error",
        "template-curly-spacing": "error",
        "template-tag-spacing": [
            "error",
            "never"
        ],
        "unicode-bom": [
            "error",
            "never"
        ],
        "use-isnan": "warn",
        "valid-jsdoc": "off",
        "valid-typeof": "off",
        "vars-on-top": "error",
        "wrap-iife": [
            "error",
            "outside",
            {
                "functionPrototypeMethods": false
            }
        ],
        "wrap-regex": "off",
        "yield-star-spacing": [
            "error",
            "after"
        ],
        "yoda": "error"
    },
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [
                    ".js",
                    ".ts",
                    ".jsx",
                    ".tsx",
                    ".json"
                ]
            }
        },
        "import/extensions": [
            ".js",
            ".ts",
            ".mjs",
            ".jsx",
            ".tsx"
        ],
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx",
                ".d.ts"
            ]
        },
        "react": {
            "pragma": "React",
            "version": "detect"
        },
        "propWrapperFunctions": [
            "forbidExtraProps",
            "exact",
            "Object.freeze"
        ],
        "import/core-modules": [],
        "import/ignore": [
            "node_modules",
            "\\.(coffee|scss|css|less|hbs|svg|json)$"
        ]
    }
};
